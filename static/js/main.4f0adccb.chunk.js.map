{"version":3,"sources":["components/Header.jsx","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.jsx","context/ModalContext.js","components/Receta.jsx","components/ListaRecetas.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","nombre","categoria","busquedaReceta","setBusquedaReceta","recetas","setRecetas","consultar","setConsultar","url","recetasResponse","obtenerRecetas","Formulario","useContext","busqueda","setBusqueda","error","setError","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","trim","length","setTimeout","type","placeholder","onChange","map","strCategory","ModalContext","ModalProvider","idReceta","setIdReceta","recetaModal","setRecetaModal","receta","console","log","obtenerId","useStyles","makeStyles","theme","modal","position","width","backgroundColor","palette","dark","boxShadow","shadows","padding","spacing","top","left","transform","color","contrastText","fontFamily","fontSize","container","textAlign","title","btn","Receta","styles","setModal","abrirCerrarModal","ingrediente","i","push","listaIngredientes","body","strDrink","item","strGlass","strInstructions","Button","onClick","src","strDrinkThumb","alt","idDrink","Modal","open","onClose","ListaRecetas","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"0NAQeA,EARA,WACb,OACE,wBAAQC,UAAU,WAAlB,SACE,6D,iECAOC,EAAoBC,0BAyBlBC,EAvBY,SAACC,GAAW,IAAD,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAYpC,OATAC,qBAAU,YACe,uCAAG,4BAAAC,EAAA,4DACZ,8DADY,SAECC,IAAMC,IADnB,+DADY,OAElBL,EAFkB,OAGxBC,EAAcD,EAAWM,KAAKC,QAHN,2CAAH,qDAKvBC,KACC,IAGD,cAACb,EAAkBc,SAAnB,CACEC,MAAO,CACLV,cAFJ,SAKGF,EAAMa,YCpBAC,EAAiBhB,0BA0CfiB,EAxCS,SAACf,GAAW,IAAD,EACWC,mBAAS,CACnDe,OAAQ,GACRC,UAAW,KAHoB,mBAC1BC,EAD0B,KACVC,EADU,OAKHlB,mBAAS,IALN,mBAK1BmB,EAL0B,KAKjBC,EALiB,OAMCpB,oBAAS,GANV,mBAM1BqB,EAN0B,KAMfC,EANe,KAQzBP,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAmBhB,OAjBAb,qBAAU,WACHkB,GACqB,uCAAG,8BAAAjB,EAAA,6DAElBW,IACCQ,EAAG,mEAA+DR,IAEnEC,IACCO,EAAG,mEAA+DP,IANjD,SAQSX,IAAMC,IAAIiB,GARnB,OAQfC,EARe,OASrBJ,EAAWI,EAAgBjB,KAAKC,QATX,2CAAH,oDAWpBiB,KAEL,CAACR,IAGF,cAACJ,EAAeH,SAAhB,CACEC,MAAO,CACLO,oBACAI,eACAH,WAJJ,SAOGpB,EAAMa,YCgDEc,EApFI,WAAO,IAChBzB,EAAe0B,qBAAW/B,GAA1BK,WADe,EAEqB0B,qBAAWd,GAA/CK,EAFe,EAEfA,kBAAmBI,EAFJ,EAEIA,aAFJ,EAIStB,mBAAS,CACvCe,OAAQ,GACRC,UAAW,KANU,mBAIhBY,EAJgB,KAINC,EAJM,OASG7B,oBAAS,GATZ,mBAShB8B,EATgB,KASTC,EATS,KAWjBC,EAAqB,SAACC,GAC1BJ,EAAY,2BACPD,GADM,kBAERK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOvB,UAI9B,OACE,uBACEhB,UAAU,SACVyC,SAAU,SAACH,GAET,GADAA,EAAEI,iBACyB,KAAvBT,EAASZ,WAAsD,IAAlCY,EAASb,OAAOuB,OAAOC,OAKtD,OAJAR,GAAS,QACTS,YAAW,WACTT,GAAS,KACR,MAGLA,GAAS,GACTb,EAAkBU,GAClBN,GAAa,GACbO,EAAY,CACVd,OAAQ,GACRC,UAAW,MAhBjB,UAoBE,0BAAUrB,UAAU,cAApB,SACE,iFAEF,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,uBACE8C,KAAK,OACLN,KAAK,SACLxC,UAAU,eACV+C,YAAaZ,EAAQ,oBAAgB,yBACrCa,SAAUX,EACVrB,MAAOiB,EAASb,WAGpB,qBAAKpB,UAAU,WAAf,SACE,yBACEwC,KAAK,YACLxC,UAAU,eACVgD,SAAUX,EACVrB,MAAOiB,EAASZ,UAJlB,UAMGc,EACC,wBAAQnB,MAAM,YAAd,iCAEA,wBAAQA,MAAM,YAAd,yCAEDV,EAAW2C,KAAI,SAAC5B,GAAD,OACd,wBAAoCL,MAAOK,EAAU6B,YAArD,SACG7B,EAAU6B,aADA7B,EAAU6B,qBAM7B,qBAAKlD,UAAU,wBAAf,SACE,uBACE8C,KAAK,SACL9C,UAAU,4BACVgB,MAAM,4BC7ELmC,EAAejD,0BA8BbkD,EA5BO,SAAChD,GAAW,IAAD,EACCC,mBAAS,MADV,mBACxBgD,EADwB,KACdC,EADc,OAEOjD,mBAAS,IAFhB,mBAExBkD,EAFwB,KAEXC,EAFW,KAgB/B,OAZAhD,qBAAU,YACO,uCAAG,8BAAAC,EAAA,yDACX4C,EADW,wDAIVzB,EAJU,mEAIwDyB,GAJxD,SAKK3C,IAAMC,IAAIiB,GALf,OAKV6B,EALU,OAMhBC,QAAQC,IAAIF,EAAO7C,KAAKC,OAAO,IAC/B2C,EAAeC,EAAO7C,KAAKC,OAAO,IAPlB,2CAAH,qDASf+C,KACC,CAACP,IAEF,cAACF,EAAapC,SAAd,CACEC,MAAO,CACLsC,cACAC,eAHJ,SAMGnD,EAAMa,Y,wBCtBP4C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQjC,MAAMkC,KACrCC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAMU,QAAQ,EAAG,EAAG,GAC7BC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAOd,EAAMK,QAAQjC,MAAM2C,aAC3BC,WAAY,YACZC,SAAU,QAEZC,UAAW,CACTC,UAAW,SAEbC,MAAO,CACLJ,WAAY,qBACZC,SAAS,OACTH,MAAOd,EAAMK,QAAQjC,MAAM2C,cAE7BM,IAAK,CACHL,WAAY,qBACZC,SAAS,OACTH,MAAOd,EAAMK,QAAQjC,MAAM2C,kBAiFhBO,EA7EA,SAAC,GAAgB,IAAd5B,EAAa,EAAbA,OAAa,EACQzB,qBAAWmB,GAAxCG,EADqB,EACrBA,YAAaC,EADQ,EACRA,YAEf+B,EAASzB,IAHc,EAKHxD,oBAAS,GALN,mBAKtB2D,EALsB,KAKfuB,EALe,KAOvBC,EAAmB,kBAAMD,GAAUvB,IAEnCyB,EAAc,IACM,WACxB,IAAK,IAAIC,EAAI,EAAGA,EAAI,KACuB,OAArCnC,EAAY,gBAAD,OAAiBmC,KAAsD,KAArCnC,EAAY,gBAAD,OAAiBmC,KADvDA,IAItBD,EAAYE,KACVpC,EAAY,aAAD,OAAcmC,IAAO,WAAQnC,EAAY,gBAAD,OAAiBmC,KAK1EE,GAEA,IAAMC,EACJ,sBAAK7F,UAAWsF,EAAOtB,MAAvB,UACE,oBAAIhE,UAAWsF,EAAOH,MAAtB,SAA8B5B,EAAYuC,WAC1C,+BACE,+CAEDL,EAAYxC,KAAI,SAAC8C,EAAML,GAAP,OACf,8BAAqBK,GAAXA,EAAOL,MAEnB,gCACE,wCACCnC,EAAYyC,YAEf,gCACE,+CACCzC,EAAY0C,mBAEf,qBAAKjG,UAAWsF,EAAOL,UAAvB,SACE,cAACiB,EAAA,EAAD,CAAQC,QAASX,EAAkBxF,UAAWsF,EAAOF,IAArD,yBAON,OACE,sBAAKpF,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,wBAAd,SAAuCyD,EAAOqC,WAC9C,qBACE9F,UAAU,eACVoG,IAAK3C,EAAO4C,cACZC,IAAK7C,EAAOqC,WAEd,qBAAK9F,UAAU,yBAAf,SACE,wBACE8C,KAAK,SACL9C,UAAU,2BACVmG,QAAS,WACPX,IACAlC,EAAYG,EAAO8C,UALvB,6BAYJ,cAACC,EAAA,EAAD,CAAOC,KAAMzC,EAAO0C,QAASlB,EAA7B,SACGK,QCzFMc,EAZM,WAAO,IAChBnF,EAAYQ,qBAAWd,GAAvBM,QAEV,OACE,qBAAKxB,UAAU,YAAf,SACKwB,EAAQyB,KAAI,SAAAQ,GAAM,OACf,cAAC,EAAD,CAA6BA,OAAQA,GAAxBA,EAAO8C,eCiBjBK,EAlBH,WACV,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAK5G,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,eCRN6G,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BtE,QAAQC,IACN,+GAKE0D,GAAUA,EAAOY,UACnBZ,EAAOY,SAASP,KAMlBhE,QAAQC,IAAI,sCAGR0D,GAAUA,EAAOa,WACnBb,EAAOa,UAAUR,WAO5BS,OAAM,SAAChG,GACNuB,QAAQvB,MAAM,4CAA6CA,MC9FjE,IAYeiG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFSnB,SAAkB3B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2B,IAAIC,yBAAwBnC,OAAOC,SAASmC,MACpDC,SAAWrC,OAAOC,SAASoC,OAIvC,OAGFrC,OAAOsC,iBAAiB,QAAQ,WAC9B,IAAMjC,EAAK,UAAM8B,yBAAN,sBAEPrC,IAgEV,SAAiCO,EAAOC,GAEtCiC,MAAMlC,EAAO,CACXmC,QAAS,CAAE,iBAAkB,YAE5B9B,MAAK,SAAC+B,GAEL,IAAMC,EAAcD,EAASD,QAAQ5I,IAAI,gBAEnB,MAApB6I,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CrC,UAAUC,cAAcqC,MAAMnC,MAAK,SAACC,GAClCA,EAAamC,aAAapC,MAAK,WAC7BV,OAAOC,SAAS8C,eAKpB3C,EAAgBC,EAAOC,MAG1Bc,OAAM,WACLzE,QAAQC,IAAI,oEAtFVoG,CAAwB3C,EAAOC,GAI/BC,UAAUC,cAAcqC,MAAMnC,MAAK,WACjC/D,QAAQC,IACN,+GAMJwD,EAAgBC,EAAOC,OE/B/B2C,GAKA5B,M","file":"static/js/main.4f0adccb.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Busca recetas de bebidas</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CategoriasContext = createContext();\r\n\r\nconst CategoriasProvider = (props) => {\r\n  const [categorias, setCategorias] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const obtenerCategorias = async () => {\r\n      const url = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n      const categorias = await axios.get(url);\r\n      setCategorias(categorias.data.drinks);\r\n    };\r\n    obtenerCategorias();\r\n  }, []);\r\n\r\n  return (\r\n    <CategoriasContext.Provider\r\n      value={{\r\n        categorias,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CategoriasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoriasProvider;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n  const [busquedaReceta, setBusquedaReceta] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n  const [recetas, setRecetas] = useState([]);\r\n  const [consultar, setConsultar] = useState(false);\r\n\r\n  const { nombre, categoria } = busquedaReceta;\r\n\r\n  useEffect(() => {\r\n      if(consultar){\r\n          const obtenerRecetas = async () => {\r\n            let url;\r\n            if(nombre){\r\n                url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}`;\r\n            }\r\n            if(categoria){\r\n                url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${categoria}`;\r\n            }\r\n            const recetasResponse = await axios.get(url);\r\n            setRecetas(recetasResponse.data.drinks);\r\n          };\r\n          obtenerRecetas();\r\n      }\r\n  }, [busquedaReceta]);\r\n\r\n  return (\r\n    <RecetasContext.Provider\r\n      value={{\r\n        setBusquedaReceta,\r\n        setConsultar,\r\n        recetas,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </RecetasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default RecetasProvider;\r\n","import { useContext, useState } from \"react\";\r\nimport { CategoriasContext } from \"../context/CategoriasContext\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nconst Formulario = () => {\r\n  const { categorias } = useContext(CategoriasContext);\r\n  const { setBusquedaReceta, setConsultar } = useContext(RecetasContext);\r\n\r\n  const [busqueda, setBusqueda] = useState({\r\n    nombre: \"\",\r\n    categoria: \"\",\r\n  });\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const obtenerDatosReceta = (e) => {\r\n    setBusqueda({\r\n      ...busqueda,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        if (busqueda.categoria === \"\" && busqueda.nombre.trim().length === 0) {\r\n          setError(true);\r\n          setTimeout(() => {\r\n            setError(false);\r\n          }, 1500);\r\n          return;\r\n        }\r\n        setError(false);\r\n        setBusquedaReceta(busqueda);\r\n        setConsultar(true);\r\n        setBusqueda({\r\n          nombre: \"\",\r\n          categoria: \"\",\r\n        });\r\n      }}\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Busca bebidas por Ingrediente o Categoria</legend>\r\n      </fieldset>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"nombre\"\r\n            className=\"form-control\"\r\n            placeholder={error ? \"¡Escríbeme!\" : \"Buscar por Ingrediente\"}\r\n            onChange={obtenerDatosReceta}\r\n            value={busqueda.nombre}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <select\r\n            name=\"categoria\"\r\n            className=\"form-control\"\r\n            onChange={obtenerDatosReceta}\r\n            value={busqueda.categoria}\r\n          >\r\n            {error ? (\r\n              <option value=\"categoria\"> ¡Seleccioname! </option>\r\n            ) : (\r\n              <option value=\"categoria\">--Buscar por Categoría--</option>\r\n            )}\r\n            {categorias.map((categoria) => (\r\n              <option key={categoria.strCategory} value={categoria.strCategory}>\r\n                {categoria.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-md-4 d-grid gap-2\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Buscar Recetas\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Formulario;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  const [idReceta, setIdReceta] = useState(null);\r\n  const [recetaModal, setRecetaModal] = useState({});\r\n\r\n  useEffect(() => {\r\n    const obtenerId = async () => {\r\n      if (!idReceta) {\r\n        return;\r\n      }\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idReceta}`;\r\n      const receta = await axios.get(url);\r\n      console.log(receta.data.drinks[0]);\r\n      setRecetaModal(receta.data.drinks[0]);\r\n    };\r\n    obtenerId();\r\n  }, [idReceta]);\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        setIdReceta,\r\n        recetaModal,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import { useContext, useState } from \"react\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\n\r\nimport { Modal, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    position: \"absolute\",\r\n    width: 700,\r\n    backgroundColor: theme.palette.error.dark,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    color: theme.palette.error.contrastText,\r\n    fontFamily: 'Maven Pro',\r\n    fontSize: '20px'\r\n  },\r\n  container: {\r\n    textAlign: \"right\",\r\n  },\r\n  title: {\r\n    fontFamily: 'Shadows Into Light',\r\n    fontSize:'50px',\r\n    color: theme.palette.error.contrastText,\r\n  },\r\n  btn: {\r\n    fontFamily: 'Shadows Into Light',\r\n    fontSize:'20px',\r\n    color: theme.palette.error.contrastText,\r\n  }\r\n}));\r\n\r\nconst Receta = ({ receta }) => {\r\n  const { setIdReceta, recetaModal } = useContext(ModalContext);\r\n\r\n  const styles = useStyles();\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const abrirCerrarModal = () => setModal(!modal);\r\n\r\n  const ingrediente = [];\r\n  const listaIngredientes = () => {\r\n    for (let i = 1; i < 16; i++) {\r\n      if (recetaModal[`strIngredient${i}`] === null || recetaModal[`strIngredient${i}`] === '') {\r\n        break;\r\n      }\r\n      ingrediente.push(\r\n        recetaModal[`strMeasure${i}`] + \" — \" + recetaModal[`strIngredient${i}`]\r\n      );\r\n    }\r\n    return ingrediente;\r\n  };\r\n  listaIngredientes();\r\n\r\n  const body = (\r\n    <div className={styles.modal}>\r\n      <h2 className={styles.title}>{recetaModal.strDrink}</h2>\r\n      <span>\r\n        <b>Ingredients:</b>\r\n      </span>\r\n      {ingrediente.map((item, i) => (\r\n        <div key={item + i}>{item}</div>\r\n      ))}\r\n      <div>\r\n        <b>Glass: </b>\r\n        {recetaModal.strGlass}\r\n      </div>\r\n      <div>\r\n        <b>Instructions: </b>\r\n        {recetaModal.strInstructions}\r\n      </div>\r\n      <div className={styles.container}>\r\n        <Button onClick={abrirCerrarModal} className={styles.btn}>\r\n          Cerrar\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header fs-5 text\">{receta.strDrink}</h2>\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={receta.strDrinkThumb}\r\n          alt={receta.strDrink}\r\n        />\r\n        <div className=\"card-body d-grid gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-danger\"\r\n            onClick={() => {\r\n              abrirCerrarModal();\r\n              setIdReceta(receta.idDrink);\r\n            }}\r\n          >\r\n            Ver Receta\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Modal open={modal} onClose={abrirCerrarModal}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Receta;\r\n","import { useContext } from \"react\";\r\nimport { RecetasContext } from \"../context/RecetasContext\";\r\n\r\nimport Receta from \"./Receta\";\r\n\r\nconst ListaRecetas = () => {\r\n    const { recetas } = useContext(RecetasContext);\r\n\r\n  return (\r\n    <div className=\" row mt-5\">\r\n        {recetas.map(receta => (\r\n            <Receta key={receta.idDrink} receta={receta} />\r\n            ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaRecetas;\r\n","import React from \"react\";\n\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListaRecetas from \"./components/ListaRecetas\";\n\nimport CategoriasProvider from \"./context/CategoriasContext\";\nimport RecetasProvider from \"./context/RecetasContext\";\nimport ModalProvider from \"./context/ModalContext\";\n\nconst App = () => {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            <ListaRecetas />\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}